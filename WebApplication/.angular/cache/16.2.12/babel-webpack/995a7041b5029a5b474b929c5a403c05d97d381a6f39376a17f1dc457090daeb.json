{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { apiUrl } from \"../enviroment/apiUrl\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/common/http\";\nclass ColaboradorService {\n  constructor(authService, http) {\n    this.authService = authService;\n    this.http = http;\n  }\n  obterColaboradores() {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n    return this.http.get(`${apiUrl}/colaboradores`, {\n      headers\n    });\n  }\n  removerColaborador(colaborador) {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n    console.log(\"objeto que está sendo enviado: \", colaborador);\n    return this.http.delete(`${apiUrl}/colaboradores/${colaborador.id}`, {\n      headers\n    });\n  }\n  cadastrarColaborador(colaborador) {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n    const data = {\n      nome: colaborador.nome,\n      dataNascimento: new Date(colaborador.dataNascimento).toISOString(),\n      cpf: colaborador.cpf,\n      rg: colaborador.rg,\n      matricula: colaborador.matricula,\n      tipo: parseInt(String(colaborador.tipo)),\n      dataAdmissao: colaborador.dataAdmissao ? new Date(colaborador.dataAdmissao).toISOString() : null,\n      valorContribuicao: colaborador.valorContribuicao || null\n    };\n    return this.http.post(`${apiUrl}/colaboradores`, data, {\n      headers\n    });\n  }\n  obterColaborador(idColaborador) {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n    return this.http.get(`${apiUrl}/colaboradores/${idColaborador}`, {\n      headers\n    });\n  }\n  editarColaborador(colaborador) {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n    const data = {\n      nome: colaborador.nome,\n      dataNascimento: new Date(colaborador.dataNascimento).toISOString(),\n      cpf: colaborador.cpf,\n      rg: colaborador.rg,\n      matricula: colaborador.matricula,\n      tipo: parseInt(String(colaborador.tipo)),\n      dataAdmissao: colaborador.dataAdmissao ? new Date(colaborador.dataAdmissao).toISOString() : null,\n      valorContribuicao: colaborador.valorContribuicao || null\n    };\n    return this.http.put(`${apiUrl}/colaboradores/${colaborador.id}`, data, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function ColaboradorService_Factory(t) {\n    return new (t || ColaboradorService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ColaboradorService,\n    factory: ColaboradorService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ColaboradorService };","map":{"version":3,"names":["HttpHeaders","apiUrl","ColaboradorService","constructor","authService","http","obterColaboradores","headers","obterTokenUsuario","get","removerColaborador","colaborador","console","log","delete","id","cadastrarColaborador","data","nome","dataNascimento","Date","toISOString","cpf","rg","matricula","tipo","parseInt","String","dataAdmissao","valorContribuicao","post","obterColaborador","idColaborador","editarColaborador","put","_","i0","ɵɵinject","i1","AuthService","i2","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/marcosmaximo/RiderProjects/PortalColaboradores/WebApplication/src/app/services/colaborador.service.ts"],"sourcesContent":["import {Injectable, OnInit} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {apiUrl} from \"../enviroment/apiUrl\";\nimport {AuthService} from \"./auth.service\";\nimport {IColaborador} from \"../interfaces/IColaborador\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColaboradorService {\n\n  constructor(private authService: AuthService,\n              private http: HttpClient) { }\n\n\n  obterColaboradores(): Observable<any> {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n\n    return this.http.get<any>(`${apiUrl}/colaboradores`, { headers });\n  }\n\n  removerColaborador(colaborador: IColaborador): Observable<any>{\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n    console.log(\"objeto que está sendo enviado: \", colaborador);\n    return this.http.delete(`${apiUrl}/colaboradores/${colaborador.id}`, {headers});\n  }\n\n  cadastrarColaborador(colaborador: IColaborador): Observable<any>{\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n    const data = {\n      nome: colaborador.nome,\n      dataNascimento: new Date(colaborador.dataNascimento).toISOString(),\n      cpf: colaborador.cpf,\n      rg: colaborador.rg,\n      matricula: colaborador.matricula,\n      tipo: parseInt(String(colaborador.tipo)),\n      dataAdmissao: colaborador.dataAdmissao ? new Date(colaborador.dataAdmissao).toISOString() : null,\n      valorContribuicao: colaborador.valorContribuicao || null\n    };\n\n    return this.http.post(`${apiUrl}/colaboradores`, data,{headers});\n  }\n\n  obterColaborador(idColaborador: number) {\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n\n    return this.http.get<any>(`${apiUrl}/colaboradores/${idColaborador}`, { headers });\n  }\n\n  editarColaborador(colaborador: IColaborador): Observable<any>{\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.authService.obterTokenUsuario}`\n    });\n\n    const data = {\n      nome: colaborador.nome,\n      dataNascimento: new Date(colaborador.dataNascimento).toISOString(),\n      cpf: colaborador.cpf,\n      rg: colaborador.rg,\n      matricula: colaborador.matricula,\n      tipo: parseInt(String(colaborador.tipo)),\n      dataAdmissao: colaborador.dataAdmissao ? new Date(colaborador.dataAdmissao).toISOString() : null,\n      valorContribuicao: colaborador.valorContribuicao || null\n    };\n\n    return this.http.put(`${apiUrl}/colaboradores/${colaborador.id}`, data,{headers});\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}