{"ast":null,"code":"import { tap } from 'rxjs';\nimport { apiUrl } from \"../enviroment/apiUrl\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass AuthService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n  }\n  logar(usuario) {\n    return this.httpClient.post(apiUrl + \"/Usuario/login\", usuario).pipe(tap(resposta => {\n      if (!resposta.success) return;\n      localStorage.setItem('token', btoa(JSON.stringify(resposta.result.token)));\n      localStorage.setItem('user', btoa(JSON.stringify(resposta.result.user)));\n      this.router.navigate(['']);\n    }));\n  }\n  registrar(register) {\n    return this.httpClient.post(apiUrl + \"/Usuario/cadastrar\", register).pipe(tap(resposta => {\n      if (!resposta.success) return;\n      localStorage.setItem('token', btoa(JSON.stringify(resposta.result.token)));\n      localStorage.setItem('user', btoa(JSON.stringify(resposta.result.user)));\n      this.router.navigate(['']);\n    }));\n  }\n  deslogar() {\n    localStorage.clear();\n    this.router.navigate(['']);\n  }\n  get obterUsuarioLogado() {\n    // @ts-ignore\n    return JSON.parse(atob(localStorage.getItem('user')));\n  }\n  get obterIdUsuarioLogado() {\n    // @ts-ignore\n    return JSON.parse(atob(localStorage.getItem('user'))).id;\n  }\n  get obterNomeUsuarioLogado() {\n    // @ts-ignore\n    return JSON.parse(atob(localStorage.getItem('user'))).nome;\n  }\n  get obterTokenUsuario() {\n    // @ts-ignore\n    return JSON.parse(atob(localStorage.getItem('token')));\n  }\n  get logado() {\n    return !!localStorage.getItem('token');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["tap","apiUrl","AuthService","constructor","httpClient","router","logar","usuario","post","pipe","resposta","success","localStorage","setItem","btoa","JSON","stringify","result","token","user","navigate","registrar","register","deslogar","clear","obterUsuarioLogado","parse","atob","getItem","obterIdUsuarioLogado","id","obterNomeUsuarioLogado","nome","obterTokenUsuario","logado","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["/Users/marcosmaximo/RiderProjects/PortalColaboradores/WebApplication/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable, tap} from 'rxjs';\nimport {ILogin} from \"../interfaces/ILogin\";\nimport {apiUrl} from \"../enviroment/apiUrl\";\nimport {IRegistrar} from \"../interfaces/IRegistrar\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private httpClient: HttpClient,\n              private router: Router) { }\n  logar(usuario: ILogin) : Observable<any> {\n    return this.httpClient.post<any>(apiUrl + \"/Usuario/login\", usuario).pipe(\n      tap((resposta) => {\n        if(!resposta.success) return;\n          localStorage.setItem('token', btoa(JSON.stringify(resposta.result.token)));\n          localStorage.setItem('user', btoa(JSON.stringify(resposta.result.user)));\n        this.router.navigate(['']);\n      }));\n  }\n\n  registrar(register: IRegistrar): Observable<any> {\n    return this.httpClient.post<any>(apiUrl + \"/Usuario/cadastrar\", register).pipe(\n        tap((resposta) => {\n          if(!resposta.success) return;\n            localStorage.setItem('token', btoa(JSON.stringify(resposta.result.token)));\n            localStorage.setItem('user', btoa(JSON.stringify(resposta.result.user)));\n          this.router.navigate(['']);\n        }));\n  }\n  deslogar() {\n    localStorage.clear();\n    this.router.navigate(['']);\n  }\n\n  get obterUsuarioLogado(): ILogin {\n    // @ts-ignore\n    return (JSON.parse(atob(localStorage.getItem('user'))) as ILogin);\n  }\n  get obterIdUsuarioLogado(): string {\n    // @ts-ignore\n    return (JSON.parse(atob(localStorage.getItem('user'))) as ILogin).id;\n  }\n\n  get obterNomeUsuarioLogado(): string {\n    // @ts-ignore\n    return (JSON.parse(atob(localStorage.getItem('user'))) as ILogin).nome;\n  }\n\n  get obterTokenUsuario(): string {\n    // @ts-ignore\n    return JSON.parse(atob(localStorage.getItem('token')));\n  }\n  get logado(): boolean {\n    return !!localStorage.getItem('token');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}