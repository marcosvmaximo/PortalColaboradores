{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction RegistrarComponent_div_20_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r2.value);\n  }\n}\nfunction RegistrarComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Ocorreu um erro ao processar sua solicita\\u00E7\\u00E3o. \");\n    i0.ɵɵelementStart(2, \"ul\", 16);\n    i0.ɵɵtemplate(3, RegistrarComponent_div_20_li_3_Template, 2, 1, \"li\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\nclass RegistrarComponent {\n  constructor(service, formBuilder) {\n    this.service = service;\n    this.formBuilder = formBuilder;\n    this.errors = [];\n    this.formRegister = formBuilder.group({});\n  }\n  ngOnInit() {\n    this.formRegister = this.formBuilder.group({\n      login: ['', [Validators.required]],\n      nome: ['', [Validators.required]],\n      senha: ['', [Validators.required]],\n      confirmarSenha: ['', [Validators.required]]\n    });\n  }\n  register() {\n    this.limparErros();\n    if (this.formRegister.invalid) {\n      this.errors.length++;\n      return;\n    }\n    let register = this.formRegister.getRawValue();\n    this.service.registrar(register).subscribe(response => {}, error => {\n      this.errors = error.error.errors;\n    });\n  }\n  limparErros() {\n    this.errors = [];\n  }\n  static #_ = this.ɵfac = function RegistrarComponent_Factory(t) {\n    return new (t || RegistrarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrarComponent,\n    selectors: [[\"app-registrar\"]],\n    decls: 23,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"align-items-center\", \"vh-100\"], [1, \"col-md-4\"], [1, \"row\", 3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"login\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"login\", \"id\", \"login\", 1, \"form-control\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"id\", \"nome\", 1, \"form-control\"], [\"for\", \"senha\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"senha\", \"id\", \"senha\", 1, \"form-control\"], [\"for\", \"confirmarSenha\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"confirmarSenha\", \"id\", \"confirmarSenha\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", \"text-center\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [1, \"m-0\", \"mt-3\", 2, \"padding-left\", \"15px\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function RegistrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3)(4, \"div\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Nome de Usu\\u00E1rio: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Nome: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"Senha: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"ConfirmarSenha: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, RegistrarComponent_div_20_Template, 4, 1, \"div\", 13);\n        i0.ɵɵelementStart(21, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function RegistrarComponent_Template_button_click_21_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵtext(22, \"Registrar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.formRegister);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.errors.length > 0);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.NgForOf, i3.NgIf],\n    encapsulation: 2\n  });\n}\nexport { RegistrarComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","error_r2","value","ɵɵtemplate","RegistrarComponent_div_20_li_3_Template","ɵɵproperty","ctx_r0","errors","RegistrarComponent","constructor","service","formBuilder","formRegister","group","ngOnInit","login","required","nome","senha","confirmarSenha","register","limparErros","invalid","length","getRawValue","registrar","subscribe","response","error","_","ɵɵdirectiveInject","i1","AuthService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","RegistrarComponent_Template","rf","ctx","ɵɵelement","RegistrarComponent_div_20_Template","ɵɵlistener","RegistrarComponent_Template_button_click_21_listener"],"sources":["/Users/marcosmaximo/RiderProjects/PortalColaboradores/WebApplication/src/app/pages/autenticacao/registrar/registrar.component.ts","/Users/marcosmaximo/RiderProjects/PortalColaboradores/WebApplication/src/app/pages/autenticacao/registrar/registrar.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../../services/auth.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {IError} from \"../../../interfaces/IError\";\nimport {ILogin} from \"../../../interfaces/ILogin\";\nimport {IRegistrar} from \"../../../interfaces/IRegistrar\";\n\n@Component({\n  selector: 'app-registrar',\n  templateUrl: './registrar.component.html'\n})\nexport class RegistrarComponent implements OnInit{\n  formRegister: FormGroup;\n  errors: IError[] = [];\n  constructor(private service: AuthService,\n              private formBuilder: FormBuilder) {\n    this.formRegister = formBuilder.group({});\n  }\n\n  ngOnInit(): void {\n    this.formRegister = this.formBuilder.group({\n      login: ['', [Validators.required]],\n      nome: ['', [Validators.required]],\n      senha: ['', [Validators.required]],\n      confirmarSenha: ['', [Validators.required]]\n    });\n  }\n\n  register(){\n    this.limparErros();\n\n    if(this.formRegister.invalid){\n      this.errors.length++;\n      return;\n    }\n\n    let register = this.formRegister.getRawValue() as IRegistrar;\n\n    this.service.registrar(register).subscribe((response) => {\n    }, error => {\n      this.errors = error.error.errors;\n    })\n  }\n\n  limparErros(){\n    this.errors = [];\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center align-items-center vh-100\">\n        <div class=\"col-md-4\">\n            <form [formGroup]=\"formRegister\" class=\"row\">\n                <div class=\"mb-3\">\n                    <label for=\"login\" class=\"form-label\">Nome de Usuário: </label>\n                    <input type=\"text\" formControlName=\"login\" class=\"form-control\" id=\"login\">\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"nome\" class=\"form-label\">Nome: </label>\n                    <input type=\"text\" formControlName=\"nome\" class=\"form-control\" id=\"nome\">\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"senha\" class=\"form-label\">Senha: </label>\n                    <input type=\"password\" formControlName=\"senha\" class=\"form-control\" id=\"senha\">\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"confirmarSenha\" class=\"form-label\">ConfirmarSenha: </label>\n                    <input type=\"password\" formControlName=\"confirmarSenha\" class=\"form-control\" id=\"confirmarSenha\">\n                </div>\n\n                <div *ngIf=\"errors.length > 0\" class=\"alert alert-danger\" role=\"alert\">\n                    Ocorreu um erro ao processar sua solicitação.\n                    <ul class=\"m-0 mt-3\" style=\"padding-left: 15px\">\n                        <li *ngFor=\"let error of errors\">{{error.value}}</li>\n                    </ul>\n                </div>\n                <button type=\"submit\" (click)=\"register()\" class=\"btn btn-primary mt-3 text-center\">Registrar</button>\n            </form>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}