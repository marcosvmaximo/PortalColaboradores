{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/usuario.service\";\nimport * as i2 from \"../../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../components/edit-remove-table/edit-remove-table.component\";\nfunction ListaUsuarioComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 10);\n    i0.ɵɵelement(6, \"app-edit-remove-table\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const usuario_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usuario_r1.login);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usuario_r1.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"objeto\", usuario_r1)(\"editarFn\", ctx_r0.editarUsuario)(\"removerFn\", ctx_r0.removerUsuario);\n  }\n}\nconst _c0 = function () {\n  return [\"/usuarios/cadastrar\"];\n};\nclass ListaUsuarioComponent {\n  constructor(service, authService, router) {\n    this.service = service;\n    this.authService = authService;\n    this.router = router;\n    this.usuarios = [];\n    this.removerUsuario = usuario => {\n      if (this.authService.obterUsuarioLogado.id === usuario.id) {\n        alert(\"Não é possível remover você mesmo.\");\n        return;\n      }\n      this.service.removerUsuario(usuario).subscribe(response => {\n        this.obterUsuarios();\n      }, error => {\n        console.error(error);\n      });\n    };\n    this.editarUsuario = usuario => {\n      this.router.navigate(['/usuarios/editar', usuario.login]);\n    };\n  }\n  ngOnInit() {\n    this.obterUsuarios();\n  }\n  obterUsuarios() {\n    this.service.obterUsuarios().subscribe(response => {\n      this.usuarios = response.result;\n    }, error => {\n      this.usuarios = [];\n      console.error(error);\n    });\n  }\n  static #_ = this.ɵfac = function ListaUsuarioComponent_Factory(t) {\n    return new (t || ListaUsuarioComponent)(i0.ɵɵdirectiveInject(i1.UsuarioService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListaUsuarioComponent,\n    selectors: [[\"app-lista\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"align-items-center\", \"vh-100\"], [1, \"col-md-6\"], [1, \"table\", \"table-light\", \"table-hover\", \"table-striped\"], [\"scope\", \"col\"], [1, \"table-group-divider\"], [4, \"ngFor\", \"ngForOf\"], [1, \"m-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"scope\", \"row\"], [2, \"border-left\", \"1px solid #d7d7d7\"], [3, \"objeto\", \"editarFn\", \"removerFn\"]],\n    template: function ListaUsuarioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"table\", 3)(4, \"thead\")(5, \"tr\")(6, \"th\", 4);\n        i0.ɵɵtext(7, \"Nome de Usu\\u00E1rio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\", 4);\n        i0.ɵɵtext(9, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"th\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"tbody\", 5);\n        i0.ɵɵtemplate(12, ListaUsuarioComponent_tr_12_Template, 7, 5, \"tr\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 8);\n        i0.ɵɵtext(15, \"Cadastrar Novo Usu\\u00E1rio\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.usuarios);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      }\n    },\n    dependencies: [i4.NgForOf, i3.RouterLink, i5.EditRemoveTableComponent],\n    encapsulation: 2\n  });\n}\nexport { ListaUsuarioComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","usuario_r1","login","nome","ɵɵproperty","ctx_r0","editarUsuario","removerUsuario","ListaUsuarioComponent","constructor","service","authService","router","usuarios","usuario","obterUsuarioLogado","id","alert","subscribe","response","obterUsuarios","error","console","navigate","ngOnInit","result","_","ɵɵdirectiveInject","i1","UsuarioService","i2","AuthService","i3","Router","_2","selectors","decls","vars","consts","template","ListaUsuarioComponent_Template","rf","ctx","ɵɵtemplate","ListaUsuarioComponent_tr_12_Template","ɵɵpureFunction0","_c0"],"sources":["/Users/marcosmaximo/RiderProjects/PortalColaboradores/WebApplication/src/app/pages/usuario/lista/lista.component.ts","/Users/marcosmaximo/RiderProjects/PortalColaboradores/WebApplication/src/app/pages/usuario/lista/lista.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {UsuarioService} from \"../../../services/usuario.service\";\nimport {IUsuario} from \"../../../interfaces/IUsuario\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-lista',\n  templateUrl: 'lista.component.html'\n})\nexport class ListaUsuarioComponent implements OnInit{\n  constructor(private service: UsuarioService,\n              private authService: AuthService,\n              private router: Router) {\n  }\n  public usuarios: IUsuario[] = [];\n\n  ngOnInit(): void {\n      this.obterUsuarios();\n  }\n\n  obterUsuarios(): void{\n      this.service.obterUsuarios()\n          .subscribe(\n              response => {\n                  this.usuarios = response.result as IUsuario[];\n              },error => {\n                  this.usuarios = [];\n                  console.error(error);\n              });\n  }\n\n    removerUsuario = (usuario: IUsuario): void => {\n      if(this.authService.obterUsuarioLogado.id === usuario.id){\n          alert(\"Não é possível remover você mesmo.\");\n          return;\n      }\n\n      this.service.removerUsuario(usuario)\n          .subscribe(\n              response => {\n                  this.obterUsuarios();\n              },error => {\n                  console.error(error);\n              });\n  }\n    editarUsuario = (usuario: IUsuario) => {\n        this.router.navigate(['/usuarios/editar', usuario.login])\n    }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center align-items-center vh-100\">\n        <div class=\"col-md-6\">\n            <table class=\"table table-light table-hover table-striped\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Nome de Usuário</th>\n                    <th scope=\"col\" >Nome</th>\n                    <th scope=\"col\" ></th>\n                </tr>\n                </thead>\n                <tbody class=\"table-group-divider\">\n                <tr *ngFor=\"let usuario of usuarios\">\n                    <th scope=\"row\">{{ usuario.login }}</th>\n                    <td>{{ usuario.nome }}</td>\n                    <td style=\"border-left: 1px solid #d7d7d7\"><app-edit-remove-table [objeto]=\"usuario\" [editarFn]=\"editarUsuario\" [removerFn]=\"removerUsuario\"></app-edit-remove-table></td>\n                </tr>\n                </tbody>\n            </table>\n            <div class=\"m-2\">\n                <button type=\"button\" [routerLink]=\"['/usuarios/cadastrar']\" class=\"btn btn-primary\">Cadastrar Novo Usuário</button>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}